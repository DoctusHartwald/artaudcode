<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/jms
                           http://www.springframework.org/schema/jms/spring-jms.xsd
                           http://activemq.apache.org/schema/core
                           http://activemq.apache.org/schema/core/activemq-core.xsd">

	<!-- Bean de chargement du fichier properties -->
	 <bean id="placeholderConfig"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
		<property name="locations">
			<list>
				<value>classpath*:jms/bootstrap.properties</value>
			</list>
		</property>
    </bean>

	<!-- Scan Component in our project -->
	<context:component-scan base-package="org.springbyexample.jms" />

	<!--  lets create an embedded ActiveMQ Broker -->
	<amq:broker id="broker" useJmx="false" persistent="false">
		<amq:transportConnectors>
			<amq:transportConnector uri="tcp://localhost:0" />
		</amq:transportConnectors>
	</amq:broker>

	<!--  ActiveMQ destinations to use  -->
	<amq:queue id="destination" physicalName="org.springbyexample.jms.test" />

	<!--
		JMS ConnectionFactory to use, configuring the embedded broker using
		XML
	-->
	<amq:connectionFactory id="jmsFactory" brokerURL="vm://localhost" />

	<!-- I /    ***  Partie JNDI *** -->
	<!-- create a JNDI Mapping -->
	<bean id="JndiTemplate" class="org.springframework.jndi.JndiTemplate">
        <property name="environment">
            <props>
                <prop key="java.naming.factory.initial">${jms.jndiContextFactory}</prop>

				<!-- Specific to ActiveMQ -->
				<!-- the address of the ActiveMQ broker -->
                <prop key="brokerURL">${jms.jndiProviderUrl}</prop>
				<!-- Some Topics Registration,or Queues -->

			</props>
        </property>
    </bean>

    <!-- Resolver JDNI -->
	<bean id="SendJmsDestinationResolver"
		class="org.springframework.jms.support.destination.JndiDestinationResolver">
		<property name="jndiTemplate" ref="JndiTemplate" />
		<property name="cache" value="true" />
	</bean>

	<!-- II /    ***  Partie Connection *** -->
	<!-- Retrieve the ConnectionFactory from the JNDI context -->
	<bean id="internalJmsQueueConnectionFactory" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiTemplate" ref="JndiTemplate"/>
        <property name="jndiName" value="${jms.connectionFactoryName}" />
    </bean>

	<!-- Spring JMS Queue Connection Factory -->
	<!-- ** lets wrap in a pool to avoid creating a connection per send -->
	<bean id="jmsQueueConnectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory" depends-on="broker">
		<property name="targetConnectionFactory">
			<!--<ref local="jmsFactory" />-->
			<ref bean="internalJmsQueueConnectionFactory"/>
		</property>
	</bean>

	<!-- III/  JMS PART -->
	<!-- Spring JMS Template -->
	<!-- JMS Producer Configuration -->
	<bean id="jmsProducerTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="jmsQueueConnectionFactory"/>
		<property name="destinationResolver" ref="SendJmsDestinationResolver"/>
		<property name="defaultDestination" ref="destination"/>
	</bean>

	<!-- JMS Consumer Configuration -->
	<bean id="jmsConsumerConnectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory" depends-on="broker">
		<property name="targetConnectionFactory">
			<ref bean="internalJmsQueueConnectionFactory"/>
		</property>
	</bean>


	<!-- IV/ Partie routing : refer to => EIP Enterprise Integration Patterns-->

	<jms:listener-container container-type="default"
		connection-factory="jmsConsumerConnectionFactory" acknowledge="auto">
		<jms:listener destination="org.springbyexample.jms.test"
			ref="jmsMessageListener" />
	</jms:listener-container>

	<!-- Counter for consumer to increment and test to verify count -->
	<bean id="counter" class="java.util.concurrent.atomic.AtomicInteger" />

</beans>
